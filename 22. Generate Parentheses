class Solution {
public:

   void solve(vector<string> &ans,int open,int close,int n,string output)
{

    //base case
    if(open==0 && close==0){
        ans.push_back(output);
        return;
    }

    //open bracket include
   if(open>0){
       output.push_back('(');
       solve(ans,open-1,close,n,output);
       output.pop_back();

   }

    //close bracket include

   if(open<close){
     output.push_back(')');

     solve(ans,open,close-1,n,output);
     output.pop_back();

   }

}    vector<string> generateParenthesis(int n) {
        vector<string>ans;
        int open=n;
        int close=n;
        string output="";

        solve(ans,open,close,n,output);
        return ans;

    }
};
